{"ast":null,"code":"import { playerRoster } from \"./playerRoster\";\nimport { updateLowerDisplay } from \"./ScoreHandling\";\nconst dragAndReorder = (elementName, event) => {\n  let draggedButton = document.getElementById(elementName);\n  let droppedYCoordinate = event.clientY;\n  let droppableArea = document.getElementById('upper half');\n  let upperHalfCoordinate = droppableArea.getBoundingClientRect().y + droppableArea.getBoundingClientRect().height;\n  if (droppedYCoordinate <= upperHalfCoordinate) {\n    //dropped in upper half\n    let draggedPlayerName = draggedButton.getElementsByClassName('playerName')[0];\n    let pocketPlayerName = document.getElementById('pocketPlayer').getElementsByClassName('playerName')[0];\n    let draggedScoreDisplay = draggedButton.getElementsByClassName('playerScore')[0];\n    let pocketScoreDisplay = document.getElementById('pocketPlayer').getElementsByClassName('playerScore')[0];\n    console.log(`Dragged player name: ${draggedPlayerName}. Pocket player name: ${pocketPlayerName}`);\n    swapPocketPlayer(pocketPlayerName, pocketScoreDisplay, draggedPlayerName, draggedScoreDisplay);\n    updateOrder();\n  }\n};\nconst updateOrder = () => {\n  let leftScoreDisplay = document.getElementById('leftPlayer').getElementsByClassName('playerScore')[0];\n  let rightScoreDisplay = document.getElementById('rightPlayer').getElementsByClassName('playerScore')[0];\n  let leftPlayerName = document.getElementById('leftPlayer').getElementsByClassName('playerName')[0];\n  let rightPlayerName = document.getElementById('rightPlayer').getElementsByClassName('playerName')[0];\n  updateLowerDisplay(leftPlayerName, leftScoreDisplay, rightPlayerName, rightScoreDisplay);\n};\nconst swapPocketPlayer = (pocketPlayerName, pocketScoreDisplay, draggedPlayerName, draggedScoreDisplay) => {\n  //swap pocket player with given dragged player\n  let tempName = pocketPlayerName.innerText;\n  let tempScore = pocketScoreDisplay.innerText;\n  pocketPlayerName.innerText = draggedPlayerName.innerText;\n  pocketScoreDisplay.innerText = draggedScoreDisplay.innerText;\n  draggedPlayerName.innerText = tempName;\n  draggedScoreDisplay.innerText = tempScore;\n};\nexport { dragAndReorder };","map":{"version":3,"names":["playerRoster","updateLowerDisplay","dragAndReorder","elementName","event","draggedButton","document","getElementById","droppedYCoordinate","clientY","droppableArea","upperHalfCoordinate","getBoundingClientRect","y","height","draggedPlayerName","getElementsByClassName","pocketPlayerName","draggedScoreDisplay","pocketScoreDisplay","console","log","swapPocketPlayer","updateOrder","leftScoreDisplay","rightScoreDisplay","leftPlayerName","rightPlayerName","tempName","innerText","tempScore"],"sources":["F:/Computer Programming/Github/Pocket-Pong-Scoreboard/Pocket Pong/src/DragHandling.js"],"sourcesContent":["import { playerRoster } from \"./playerRoster\";\r\nimport { updateLowerDisplay } from \"./ScoreHandling\";\r\n\r\nconst dragAndReorder = (elementName, event) => {\r\n\r\n    let draggedButton = document.getElementById(elementName);\r\n\r\n    let droppedYCoordinate = event.clientY;\r\n\r\n    let droppableArea = document.getElementById('upper half');\r\n    let upperHalfCoordinate = droppableArea.getBoundingClientRect().y + droppableArea.getBoundingClientRect().height;\r\n\r\n    if(droppedYCoordinate <= upperHalfCoordinate) {\r\n\r\n        //dropped in upper half\r\n        let draggedPlayerName = draggedButton.getElementsByClassName('playerName')[0];\r\n        let pocketPlayerName =  document.getElementById('pocketPlayer').getElementsByClassName('playerName')[0];\r\n\r\n        let draggedScoreDisplay = draggedButton.getElementsByClassName('playerScore')[0];\r\n        let pocketScoreDisplay = document.getElementById('pocketPlayer').getElementsByClassName('playerScore')[0];\r\n\r\n        console.log(`Dragged player name: ${draggedPlayerName}. Pocket player name: ${pocketPlayerName}`);\r\n\r\n        swapPocketPlayer(pocketPlayerName, pocketScoreDisplay, draggedPlayerName, draggedScoreDisplay);\r\n        updateOrder();\r\n    }\r\n\r\n};\r\n\r\nconst updateOrder = () => {\r\n    let leftScoreDisplay = document.getElementById('leftPlayer').getElementsByClassName('playerScore')[0];\r\n    let rightScoreDisplay = document.getElementById('rightPlayer').getElementsByClassName('playerScore')[0];\r\n\r\n    let leftPlayerName = document.getElementById('leftPlayer').getElementsByClassName('playerName')[0];\r\n    let rightPlayerName = document.getElementById('rightPlayer').getElementsByClassName('playerName')[0];\r\n\r\n    updateLowerDisplay(leftPlayerName, leftScoreDisplay, rightPlayerName, rightScoreDisplay);\r\n}\r\n\r\nconst swapPocketPlayer = (pocketPlayerName, pocketScoreDisplay, draggedPlayerName, draggedScoreDisplay) => {\r\n\r\n    //swap pocket player with given dragged player\r\n    let tempName = pocketPlayerName.innerText;\r\n    let tempScore = pocketScoreDisplay.innerText;\r\n    \r\n    pocketPlayerName.innerText = draggedPlayerName.innerText;\r\n    pocketScoreDisplay.innerText = draggedScoreDisplay.innerText;\r\n\r\n    draggedPlayerName.innerText = tempName;\r\n    draggedScoreDisplay.innerText = tempScore;\r\n};\r\n\r\nexport {dragAndReorder};"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,kBAAkB,QAAQ,iBAAiB;AAEpD,MAAMC,cAAc,GAAGA,CAACC,WAAW,EAAEC,KAAK,KAAK;EAE3C,IAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAACJ,WAAW,CAAC;EAExD,IAAIK,kBAAkB,GAAGJ,KAAK,CAACK,OAAO;EAEtC,IAAIC,aAAa,GAAGJ,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;EACzD,IAAII,mBAAmB,GAAGD,aAAa,CAACE,qBAAqB,CAAC,CAAC,CAACC,CAAC,GAAGH,aAAa,CAACE,qBAAqB,CAAC,CAAC,CAACE,MAAM;EAEhH,IAAGN,kBAAkB,IAAIG,mBAAmB,EAAE;IAE1C;IACA,IAAII,iBAAiB,GAAGV,aAAa,CAACW,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC7E,IAAIC,gBAAgB,GAAIX,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACS,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAEvG,IAAIE,mBAAmB,GAAGb,aAAa,CAACW,sBAAsB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IAChF,IAAIG,kBAAkB,GAAGb,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACS,sBAAsB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IAEzGI,OAAO,CAACC,GAAG,CAAC,wBAAwBN,iBAAiB,yBAAyBE,gBAAgB,EAAE,CAAC;IAEjGK,gBAAgB,CAACL,gBAAgB,EAAEE,kBAAkB,EAAEJ,iBAAiB,EAAEG,mBAAmB,CAAC;IAC9FK,WAAW,CAAC,CAAC;EACjB;AAEJ,CAAC;AAED,MAAMA,WAAW,GAAGA,CAAA,KAAM;EACtB,IAAIC,gBAAgB,GAAGlB,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACS,sBAAsB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;EACrG,IAAIS,iBAAiB,GAAGnB,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACS,sBAAsB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;EAEvG,IAAIU,cAAc,GAAGpB,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACS,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;EAClG,IAAIW,eAAe,GAAGrB,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACS,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;EAEpGf,kBAAkB,CAACyB,cAAc,EAAEF,gBAAgB,EAAEG,eAAe,EAAEF,iBAAiB,CAAC;AAC5F,CAAC;AAED,MAAMH,gBAAgB,GAAGA,CAACL,gBAAgB,EAAEE,kBAAkB,EAAEJ,iBAAiB,EAAEG,mBAAmB,KAAK;EAEvG;EACA,IAAIU,QAAQ,GAAGX,gBAAgB,CAACY,SAAS;EACzC,IAAIC,SAAS,GAAGX,kBAAkB,CAACU,SAAS;EAE5CZ,gBAAgB,CAACY,SAAS,GAAGd,iBAAiB,CAACc,SAAS;EACxDV,kBAAkB,CAACU,SAAS,GAAGX,mBAAmB,CAACW,SAAS;EAE5Dd,iBAAiB,CAACc,SAAS,GAAGD,QAAQ;EACtCV,mBAAmB,CAACW,SAAS,GAAGC,SAAS;AAC7C,CAAC;AAED,SAAQ5B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}