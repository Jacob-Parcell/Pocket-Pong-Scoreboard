{"ast":null,"code":"import { Player } from \"./Player\";\nimport { playerRoster } from \"./playerRoster\";\nconst updateScore = elementName => {\n  //player.incrementScore();\n  let clickedButton = document.getElementById(elementName);\n  let currentPlayer = clickedButton.getElementsByClassName('playerName')[0].innerText;\n  console.log(currentPlayer);\n  //figure out which player it is and increment score\n  switch (currentPlayer) {\n    case playerRoster[0].name:\n      playerRoster[0].incrementScore();\n      break;\n    case playerRoster[1].name:\n      playerRoster[1].incrementScore();\n      break;\n    case playerRoster[2].name:\n      playerRoster[2].incrementScore();\n      break;\n    default:\n      console.log('Error: Player not found');\n  }\n\n  //update position of players based on the non-pocket players scores\n};\nexport { updateScore };","map":{"version":3,"names":["Player","playerRoster","updateScore","elementName","clickedButton","document","getElementById","currentPlayer","getElementsByClassName","innerText","console","log","name","incrementScore"],"sources":["C:/Users/jakep/Documents/Programming/Pocket Pong Scoreboard/pocket-pong/src/ScoreHandling.js"],"sourcesContent":["import { Player } from \"./Player\";\r\nimport { playerRoster } from \"./playerRoster\";\r\n\r\nconst updateScore = (elementName) => {\r\n\r\n    //player.incrementScore();\r\n    let clickedButton = document.getElementById(elementName);\r\n    let currentPlayer = clickedButton.getElementsByClassName('playerName')[0].innerText;\r\n    console.log(currentPlayer);\r\n    //figure out which player it is and increment score\r\n    switch (currentPlayer) {\r\n        case playerRoster[0].name:\r\n            playerRoster[0].incrementScore();\r\n            break;\r\n        case playerRoster[1].name:\r\n            playerRoster[1].incrementScore();\r\n            break;\r\n        case playerRoster[2].name:\r\n            playerRoster[2].incrementScore();\r\n            break;\r\n        default:\r\n            console.log('Error: Player not found');\r\n    }\r\n\r\n    //update position of players based on the non-pocket players scores\r\n\r\n};\r\n\r\n\r\nexport {updateScore};"],"mappings":"AAAA,SAASA,MAAM,QAAQ,UAAU;AACjC,SAASC,YAAY,QAAQ,gBAAgB;AAE7C,MAAMC,WAAW,GAAIC,WAAW,IAAK;EAEjC;EACA,IAAIC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAACH,WAAW,CAAC;EACxD,IAAII,aAAa,GAAGH,aAAa,CAACI,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACC,SAAS;EACnFC,OAAO,CAACC,GAAG,CAACJ,aAAa,CAAC;EAC1B;EACA,QAAQA,aAAa;IACjB,KAAKN,YAAY,CAAC,CAAC,CAAC,CAACW,IAAI;MACrBX,YAAY,CAAC,CAAC,CAAC,CAACY,cAAc,CAAC,CAAC;MAChC;IACJ,KAAKZ,YAAY,CAAC,CAAC,CAAC,CAACW,IAAI;MACrBX,YAAY,CAAC,CAAC,CAAC,CAACY,cAAc,CAAC,CAAC;MAChC;IACJ,KAAKZ,YAAY,CAAC,CAAC,CAAC,CAACW,IAAI;MACrBX,YAAY,CAAC,CAAC,CAAC,CAACY,cAAc,CAAC,CAAC;MAChC;IACJ;MACIH,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EAC9C;;EAEA;AAEJ,CAAC;AAGD,SAAQT,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}